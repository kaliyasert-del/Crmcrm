"""
نماذج البيانات لنظام CRM محل الخياطة
"""

from dataclasses import dataclass
from typing import Optional
from datetime import datetime


@dataclass
class Customer:
    """نموذج العميل"""
    id: Optional[int] = None
    name: str = ""
    phone: str = ""
    address: str = ""
    email: str = ""
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    
    def to_dict(self):
        """تحويل النموذج إلى قاموس"""
        return {
            'id': self.id,
            'name': self.name,
            'phone': self.phone,
            'address': self.address,
            'email': self.email,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }
    
    @classmethod
    def from_dict(cls, data):
        """إنشاء نموذج من قاموس"""
        return cls(
            id=data.get('id'),
            name=data.get('name', ''),
            phone=data.get('phone', ''),
            address=data.get('address', ''),
            email=data.get('email', ''),
            created_at=data.get('created_at'),
            updated_at=data.get('updated_at')
        )


@dataclass
class Order:
    """نموذج الطلب"""
    id: Optional[int] = None
    customer_id: int = 0
    order_type: str = ""
    status: str = "قيد التنفيذ"
    order_date: Optional[str] = None
    delivery_date: Optional[str] = None
    total_amount: float = 0.0
    paid_amount: float = 0.0
    notes: str = ""
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    
    @property
    def remaining_amount(self):
        """المبلغ المتبقي"""
        return self.total_amount - self.paid_amount
    
    def to_dict(self):
        """تحويل النموذج إلى قاموس"""
        return {
            'id': self.id,
            'customer_id': self.customer_id,
            'order_type': self.order_type,
            'status': self.status,
            'order_date': self.order_date,
            'delivery_date': self.delivery_date,
            'total_amount': self.total_amount,
            'paid_amount': self.paid_amount,
            'notes': self.notes,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }
    
    @classmethod
    def from_dict(cls, data):
        """إنشاء نموذج من قاموس"""
        return cls(
            id=data.get('id'),
            customer_id=data.get('customer_id', 0),
            order_type=data.get('order_type', ''),
            status=data.get('status', 'قيد التنفيذ'),
            order_date=data.get('order_date'),
            delivery_date=data.get('delivery_date'),
            total_amount=data.get('total_amount', 0.0),
            paid_amount=data.get('paid_amount', 0.0),
            notes=data.get('notes', ''),
            created_at=data.get('created_at'),
            updated_at=data.get('updated_at')
        )


@dataclass
class Measurement:
    """نموذج القياس"""
    id: Optional[int] = None
    customer_id: int = 0
    order_id: Optional[int] = None
    height: Optional[float] = None
    shoulder_width: Optional[float] = None
    sleeve_length: Optional[float] = None
    chest_width: Optional[float] = None
    waist_width: Optional[float] = None
    neck_size: Optional[float] = None
    arm_circumference: Optional[float] = None
    thigh_circumference: Optional[float] = None
    notes: str = ""
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    
    def to_dict(self):
        """تحويل النموذج إلى قاموس"""
        return {
            'id': self.id,
            'customer_id': self.customer_id,
            'order_id': self.order_id,
            'height': self.height,
            'shoulder_width': self.shoulder_width,
            'sleeve_length': self.sleeve_length,
            'chest_width': self.chest_width,
            'waist_width': self.waist_width,
            'neck_size': self.neck_size,
            'arm_circumference': self.arm_circumference,
            'thigh_circumference': self.thigh_circumference,
            'notes': self.notes,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }
    
    @classmethod
    def from_dict(cls, data):
        """إنشاء نموذج من قاموس"""
        return cls(
            id=data.get('id'),
            customer_id=data.get('customer_id', 0),
            order_id=data.get('order_id'),
            height=data.get('height'),
            shoulder_width=data.get('shoulder_width'),
            sleeve_length=data.get('sleeve_length'),
            chest_width=data.get('chest_width'),
            waist_width=data.get('waist_width'),
            neck_size=data.get('neck_size'),
            arm_circumference=data.get('arm_circumference'),
            thigh_circumference=data.get('thigh_circumference'),
            notes=data.get('notes', ''),
            created_at=data.get('created_at'),
            updated_at=data.get('updated_at')
        )


@dataclass
class Appointment:
    """نموذج الموعد"""
    id: Optional[int] = None
    customer_id: int = 0
    date: str = ""
    time: str = ""
    purpose: str = ""
    status: str = "مجدول"
    notes: str = ""
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    
    def to_dict(self):
        """تحويل النموذج إلى قاموس"""
        return {
            'id': self.id,
            'customer_id': self.customer_id,
            'date': self.date,
            'time': self.time,
            'purpose': self.purpose,
            'status': self.status,
            'notes': self.notes,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }
    
    @classmethod
    def from_dict(cls, data):
        """إنشاء نموذج من قاموس"""
        return cls(
            id=data.get('id'),
            customer_id=data.get('customer_id', 0),
            date=data.get('date', ''),
            time=data.get('time', ''),
            purpose=data.get('purpose', ''),
            status=data.get('status', 'مجدول'),
            notes=data.get('notes', ''),
            created_at=data.get('created_at'),
            updated_at=data.get('updated_at')
        )


@dataclass
class Payment:
    """نموذج الدفعة"""
    id: Optional[int] = None
    order_id: int = 0
    amount: float = 0.0
    payment_date: Optional[str] = None
    payment_method: str = "نقداً"
    notes: str = ""
    created_at: Optional[str] = None
    updated_at: Optional[str] = None
    
    def to_dict(self):
        """تحويل النموذج إلى قاموس"""
        return {
            'id': self.id,
            'order_id': self.order_id,
            'amount': self.amount,
            'payment_date': self.payment_date,
            'payment_method': self.payment_method,
            'notes': self.notes,
            'created_at': self.created_at,
            'updated_at': self.updated_at
        }
    
    @classmethod
    def from_dict(cls, data):
        """إنشاء نموذج من قاموس"""
        return cls(
            id=data.get('id'),
            order_id=data.get('order_id', 0),
            amount=data.get('amount', 0.0),
            payment_date=data.get('payment_date'),
            payment_method=data.get('payment_method', 'نقداً'),
            notes=data.get('notes', ''),
            created_at=data.get('created_at'),
            updated_at=data.get('updated_at')
        )

